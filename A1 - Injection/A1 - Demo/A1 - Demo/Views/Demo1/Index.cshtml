@model A1___Demo.Models.BankAccount
@{
    ViewData["Title"] = "Bank Accounts";
}

<h4>Bank Accounts</h4>
<hr />
<p>
    To exploit the SQL Injection threat, you can try:
    <ul>
        <li>Use <span class="badge badge-danger">Matthew Raymer'); delete from BankAccount --</span> - In this case we can delete all the data in Table BankAccount</li>
        <li>You can also try <span class="badge badge-danger">Matthew Raymer'); drop table BankAccount --</span> - In this case we can delete the Table BankAccount</li>
        <li>You can use <span class="badge badge-danger">Recreate database</span> to recreate table BankAccount</li>
    </ul>
</p>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Register" asp-antiforgery="true">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" id="btnLogin" value="Create Account" class="btn btn-default" />
                <br />
                @if (Model.success == true)
                {
                    <span style="color:red">Account Created!</span>
                }
                @if (Model.success == false)
                {
                    <span style="color:red">An error occured.</span>
                }
            </div>
        </form>
        <div class="row">
            <div class="float-lg-right">
                <a asp-action="RecreateDatabase" class="btn btn-warning">Recreate database</a>
            </div>

        </div>

    </div>
</div>